package(default_visibility = ["//visibility:public"])

load("@build_bazel_rules_nodejs//:index.bzl", "nodejs_binary")

nodejs_binary(
    name = "rollup_for_ng_package",
    data = [
        # BEGIN-DEV-ONLY
        "@npm" +
        # END-DEV-ONLY
        "//rollup",
        # BEGIN-DEV-ONLY
        "@npm" +
        # END-DEV-ONLY
        "//rollup-plugin-commonjs",
        # BEGIN-DEV-ONLY
        "@npm" +
        # END-DEV-ONLY
        "//rollup-plugin-node-resolve",
        # BEGIN-DEV-ONLY
        "@npm" +
        # END-DEV-ONLY
        "//rollup-plugin-sourcemaps",
        # BEGIN-DEV-ONLY
        "@npm" +
        # END-DEV-ONLY
        "//typescript",
    ],
    entry_point = (
        # BEGIN-DEV-ONLY
        "@npm" +
        # END-DEV-ONLY
        "//:node_modules/rollup/dist/bin/rollup"
    ),
)

exports_files([
    "ng_package.bzl",
    "rollup.config.js",
    "terser_config.default.json",
])

# BEGIN-DEV-ONLY
load("@npm//@bazel/typescript:index.bzl", "ts_library")

ts_library(
    name = "lib",
    srcs = glob(["*.ts"]),
    node_modules = "@npm//typescript:typescript__typings",
    tsconfig = ":tsconfig.json",
    deps = [
        "@npm//@types/node",
        "@npm//@types/shelljs",
    ],
)

filegroup(
    name = "package_assets",
    srcs = glob(["*.bzl"]) + [
        "BUILD.bazel",
        "rollup.config.js",
        "terser_config.default.json",
    ],
)

nodejs_binary(
    name = "packager",
    data = [
        "lib",
        "@npm//shelljs",
    ],
    entry_point = ":packager.ts",
)
# END-DEV-ONLY
